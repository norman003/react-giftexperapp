{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFecthGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACE,mCACE,sBAAMC,SAXS,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMd,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eAuB3BZ,EAAYe,UAAU,CACpBd,c,OAAee,EAAUC,KAAKC,Y,mCC9BjBC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWZM,GAXY,4CAAD,sDCATO,EAAe,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAErC,OACE,sBAAKc,UAAU,uBAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAb,SAACA,GAAY,IAAD,EACXlB,mBAAS,CACjCyB,KAAK,GACLa,SAAQ,IAH2B,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GACFH,EAAS,CACPf,KAAKkB,EACLL,SAAQ,SAGhB,CAACpB,IAEIqB,EDfuBK,CAAc1B,GAAhCa,EAF0B,EAE/BN,KAAYa,EAFmB,EAEnBA,QAEnB,OACE,eAAC,WAAD,WACE,oBAAIJ,UAAU,kBAAd,SAAiChB,IAChCoB,GAAS,mBAAGJ,UAAU,iBAAb,qBACV,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEUpBgB,EArBM,WAAK,IAAD,EACa7C,mBAAS,CAAC,cADvB,mBAChB8C,EADgB,KACJ/C,EADI,KAGvB,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI+C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCZb6B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAQ,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.14cf72b3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//COMPONENTS: funciones generales\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n  const handleInputChange=(e)=>{\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n\r\n    if (inputValue.trim().length>2){\r\n      setCategories(cats=>[inputValue,...cats])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nAddCategory.prototype={\r\n  setCategories: PropTypes.func.isRequired\r\n}","\r\n  //HELPERS: funciones de promesas\r\n  export const getGifs=async(category)=>{\r\n    const url  = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FOYkOT079royqclhtkYi0gHNczreJog9`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n    const gifs=data.map(img=>{\r\n      return{\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    })\r\n    return gifs\r\n  }","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id,title,url}) => {\r\n  // console.log(id,title,url)\r\n  return (\r\n    <div className=\"card animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifts } from '../hooks/useFecthGifts'\r\nimport { GiftGridItem } from './GiftGridItem'\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n  const {data:images,loading} = useFetchGifts(category)\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className='animate__fadeIn'>{category}</h3>\r\n      {loading&&<p className='animate__flash'>Loading</p>}\r\n      <div className=\"carg-grid\">\r\n        {\r\n          images.map((img)=>(\r\n            <GiftGridItem key={img.id} {...img}/>\r\n          ))\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifts\"\r\n\r\n//HOOKS: funcion de consumo de promesas(helpers)\r\nexport const useFetchGifts=(category)=>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n  })\r\n\r\n  //USEEFFECT: Son promesas sincronas\r\n  useEffect(()=>{\r\n    getGifs(category)\r\n      .then(imgs=>{\r\n          setState({\r\n            data:imgs,\r\n            loading:false\r\n          })\r\n      })\r\n  },[category])\r\n\r\n  return state\r\n}","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { GiftGrid } from \"./components/GiftGrid\"\r\n\r\nconst GiftExpertApp =()=>{\r\n  const [categories, setCategories] = useState(['one punch'])\r\n\r\n  return(\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n      \r\n      <ol>\r\n        {\r\n          categories.map( category => \r\n            <GiftGrid \r\n              key={category}\r\n              category={category}/>\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\nexport default GiftExpertApp\r\n\r\n  // const handleAdd =()=>{\r\n  //   // setCategories([...categories,'naruto']);\r\n  //   setCategories(cats=>[...cats,'naruto'])\r\n  // }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root')\nReactDOM.render( <GiftExpertApp />, divRoot);\n\n"],"sourceRoot":""}